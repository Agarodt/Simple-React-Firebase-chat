{"version":3,"sources":["firebase.js","components/SendMessage.js","components/Logout.js","components/ChatComp.js","components/Login.js","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","SendMessage","useState","msg","setMsg","e","a","preventDefault","currentUser","uid","photoURL","collection","add","text","createdAt","FieldValue","serverTimestamp","placeholder","type","value","onChange","target","onClick","Logout","signOut","ChatComp","messages","setMessages","useEffect","orderBy","limit","onSnapshot","snapshot","docs","map","doc","data","id","className","src","alt","Login","provider","GoogleAuthProvider","signInWithPopup","styles","app","textAlign","App","useAuthState","user","style","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAYMA,EAVcC,IAASC,cAAc,CACvCC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAIYC,YAEjBC,EAAOT,IAASS,O,gCCmBPC,MA5Bf,WACI,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KADmB,4CAGnB,WAA2BC,GAA3B,mBAAAC,EAAA,6DACID,EAAEE,iBADN,EAE8BP,EAAKQ,YAAvBC,EAFZ,EAEYA,IAAKC,EAFjB,EAEiBA,SAFjB,SAIUpB,EAAGqB,WAAW,YAAYC,IAAI,CAChCC,KAAMV,EACNO,WACAD,MACAK,UAAWvB,IAASQ,UAAUgB,WAAWC,oBARjD,OAUIZ,EAAO,IAVX,4CAHmB,sBAgBnB,OACI,8BAEQ,gCACI,uBAAOa,YAAY,eAAeC,KAAK,OAAOC,MAAOhB,EAAKiB,SAAU,SAAAf,GAAC,OAAID,EAAOC,EAAEgB,OAAOF,UACzF,wBAAQG,QArBL,4CAqBH,wBCdLC,MARf,WACI,OACI,8BACI,wBAAQD,QAAS,kBAAMtB,EAAKwB,WAA5B,yBCwBGC,MAzBd,WACG,MAAgCvB,mBAAS,IAAzC,mBAAOwB,EAAP,KAAiBC,EAAjB,KAMA,OALAC,qBAAU,WACNtC,EAAGqB,WAAW,YAAYkB,QAAQ,aAAaC,MAAM,IAAIC,YAAW,SAAAC,GAChEL,EAAYK,EAASC,KAAKC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,gBAE9C,IAEC,gCACI,cAAC,EAAD,IACA,8BACKV,EAASQ,KAAI,gBAAGG,EAAH,EAAGA,GAAIxB,EAAP,EAAOA,KAAMH,EAAb,EAAaA,SAAUD,EAAvB,EAAuBA,IAAvB,OACV,8BACI,sBAAc6B,UAAS,cAAS7B,IAAQT,EAAKQ,YAAYC,IAAM,OAAS,YAAxE,UACI,qBAAK8B,IAAK7B,EAAU8B,IAAI,KACxB,4BAAI3B,MAFEwB,UAOtB,cAAC,EAAD,QCTGI,MAZf,WAKI,OACI,8BACI,wBAAQnB,QANhB,WACI,IAAMoB,EAAW,IAAInD,IAASS,KAAK2C,mBACnC3C,EAAK4C,gBAAgBF,IAIjB,wB,QCLNG,EAAS,CACbC,IAAK,CACHC,UAAW,WAaAC,MATf,WACE,MAAeC,YAAajD,GAArBkD,EAAP,oBACA,OACE,qBAAKC,MAASN,EAAOC,IAArB,SACGI,EAAO,cAAC,EAAD,IAAe,cAAC,EAAD,OCX7BE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7533b993.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyAm8Ijz9J8gvQClXTm7Vo5ARP8S9GXdvvI\",\r\n    authDomain: \"chat2906-9557b.firebaseapp.com\",\r\n    projectId: \"chat2906-9557b\",\r\n    storageBucket: \"chat2906-9557b.appspot.com\",\r\n    messagingSenderId: \"142966766297\",\r\n    appId: \"1:142966766297:web:9edf6e66306d0e918f9cc8\"\r\n    \r\n})\r\n\r\nconst db = firebaseApp.firestore()\r\n\r\nconst auth = firebase.auth()\r\n\r\nexport { db, auth }","  \r\nimport React, { useState } from 'react'\r\nimport { db, auth } from '../firebase'\r\nimport firebase from 'firebase'\r\n\r\nfunction SendMessage() {\r\n    const [msg, setMsg] = useState('')\r\n\r\n    async function sendMessage(e) {\r\n        e.preventDefault()\r\n        const { uid, photoURL } = auth.currentUser\r\n\r\n        await db.collection('messages').add({\r\n            text: msg,\r\n            photoURL,\r\n            uid,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n        setMsg('')\r\n       \r\n    }\r\n    return (\r\n        <div>\r\n          \r\n                <div>\r\n                    <input placeholder='your message' type=\"text\" value={msg} onChange={e => setMsg(e.target.value)} />\r\n                    <button onClick={sendMessage}>Send</button>\r\n                </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SendMessage","\r\nimport React from 'react'\r\nimport { auth } from '../firebase.js'\r\n\r\nfunction Logout() {\r\n    return (\r\n        <div>\r\n            <button onClick={() => auth.signOut()}>Sign Out</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logout","import React, {useState, useEffect} from 'react'\r\nimport { db, auth } from '../firebase'\r\nimport SendMessage from './SendMessage'\r\nimport Logout from './Logout'\r\n\r\n\r\n function ChatComp(){\r\n    const [messages, setMessages] = useState([])\r\n    useEffect(() => {\r\n        db.collection('messages').orderBy('createdAt').limit(50).onSnapshot(snapshot => {\r\n            setMessages(snapshot.docs.map(doc => doc.data()))\r\n        })\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <Logout />\r\n            <div>\r\n                {messages.map(({ id, text, photoURL, uid }) => (\r\n                    <div>\r\n                        <div key={id} className={`msg ${uid === auth.currentUser.uid ? 'sent' : 'received'}`}>\r\n                            <img src={photoURL} alt=\"\" />\r\n                            <p>{text}</p>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <SendMessage/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatComp","  \r\nimport React from 'react'\r\nimport firebase from 'firebase'\r\nimport { auth } from '../firebase.js'\r\n\r\nfunction Login() {\r\n    function signIn() {\r\n        const provider = new firebase.auth.GoogleAuthProvider()\r\n        auth.signInWithPopup(provider)\r\n    }\r\n    return (\r\n        <div>\r\n            <button onClick={signIn}>Sign In</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","\nimport './App.css';\nimport ChatComp from './components/ChatComp'\nimport Login from './components/Login';\nimport { auth } from './firebase.js'\nimport { useAuthState } from 'react-firebase-hooks/auth'\n\nconst styles = {\n  app: {\n    textAlign: 'center'\n  }\n}\n\nfunction App() {\n  const [user] = useAuthState(auth)\n  return (\n    <div style = {styles.app}>\n      {user ? <ChatComp /> : <Login />}\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}